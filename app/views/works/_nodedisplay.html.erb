<h1>Listing nodes</h1>

<table>
  <thead>
    <tr>
      <th>Title</th>
      <th>Category</th>
      <th>Work</th>
      <th>Type</th>
      <th>Parent</th>
    </tr>
  </thead>

  <tbody>
    <% @work.nodes.each do |node| %>
      <tr>
        <td><%= node.title %></td>
        <td><%= node.category.name %></td>
        <td><%= node.work.name %></td>
        <td><%= node.type %></td>
        <% if node.parents.first != nil %>
          <td><%= node.parents.first.title %></td>
        <% end %>
      </tr>
    <% end %>
  </tbody>
</table>

<style>
.node {
  stroke: #fff;
  stroke-width: 1.5px;
}

.node text{
  fill: #000;
  font: 10px sans-serif;
}

.link {
  stroke: #999;
  stroke-opacity: .6;
}

g {
  fill:#808;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<%= javascript_tag do %>

  var nodes = <%= raw(@nodes.to_json) %>;
  var links = <%= raw(@links.to_json) %>;

  var firstelement = +links[0].source;
  
  links.forEach(function(l) {
    l.source = +l.source;
    l.source = l.source-firstelement;
    l.target = +l.target
    l.target = l.target-firstelement;
  });

  var width = 960,
      height = 500;

  var color = d3.scale.category20();

  var force = d3.layout.force()
      .charge(-1000)
      .linkDistance(300)
      .size([width, height]);

  var svg = d3.select("body").append("svg")
      .attr("width", width)
      .attr("height", height);

  force
      .nodes(nodes)
      .links(links)
      .start();

  var link = svg.selectAll(".link")
      .data(links)
    .enter().append("line")
      .attr("class", "link")
      .style("stroke-width", function(d) { return Math.sqrt(d.weight); });

  var node = svg.selectAll(".node")
      .data(nodes)
    .enter().append("g")
      .attr("class", "node")
      .call(force.drag);

  node.append("circle")
      .attr("class", "circle_node")
      .attr("r", 50)
      .style("fill", function(d) { return color(d.id); })

  node.append("title")
      .text(function(d) { return d.title; });

  node.append("text")
    .attr("transform", function(d) { return "translate( -25,  0 )"; })
    .text(function(d) { return d.title; })

  force.on("tick", function() {
    link.attr("x1", function(d) { return d.source.x; })
        .attr("y1", function(d) { return d.source.y; })
        .attr("x2", function(d) { return d.target.x; })
        .attr("y2", function(d) { return d.target.y; });

    node.attr("transform", function(d) { return "translate(" + d.x + "," + d.y+")"; });
  });

<% end %>

<p><%= @nodes.to_json %></p>
<p><%= @links.to_json %></p>






<!--  var nodes = <%= raw(@nodes.to_json) %>;
  var links = <%= raw(@links.to_json) %>;



  //var nodes = [{"title":"Duncan's Death","id":"265"},{"title":"Nature Thrown Off","id":"266"},{"title":"Cows Dead","id":"267"},{"title":"Weather Bad","id":"268"},{"title":"Lighting kills man","id":"269"},{"title":"Macbeth's Rise","id":"270"}];
  //var links = [{"source":"265","target":"266","weight":"1"},{"source":"266","target":"267","weight":"1"},{"source":"266","target":"268","weight":"1"},{"source":"268","target":"269","weight":"1"}];

  var firstelement = +links[0].source;
  document.write(firstelement);
  
  links.forEach(function(l) {
    l.source = +l.source;
    l.source = l.source-firstelement;
    l.target = +l.target
    l.target = l.target-firstelement;
    document.write(l.source);
    document.write(l.target)
    document.write("</br>");
  });

  var width = 960,
      height = 500;

  var color = d3.scale.category20();

  var force = d3.layout.force()
      .charge(-1000)
      .linkDistance(300)
      .size([width, height]);

  var svg = d3.select("body").append("svg")
      .attr("width", width)
      .attr("height", height);

  force
      .nodes(nodes)
      .links(links)
      .start();

  var link = svg.selectAll(".link")
      .data(links)
    .enter().append("line")
      .attr("class", "link")
      .style("stroke-width", function(d) { return Math.sqrt(d.weight); });

  var node = svg.selectAll(".node")
      .data(nodes)
    .enter().append("circle")
      .attr("class", "node")
      .attr("r", 50)
      .style("fill", function(d) { return color(d.id); })
      .call(force.drag);

  node.append("svg:title")
      .text(function(d) { return d.title; });

  node.append("svg:text")
    .attr("x", function(d) { return d.x; } )
    .attr("y", function(d) { return d.y; })
    .text(function(d) { return d.title; });

  force.on("tick", function() {
    link.attr("x1", function(d) { return d.source.x; })
        .attr("y1", function(d) { return d.source.y; })
        .attr("x2", function(d) { return d.target.x; })
        .attr("y2", function(d) { return d.target.y; });

    node.attr("cx", function(a) { return a.x; })
        .attr("cy", function(a) { return a.y; });
    
  });-->