{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"prev",
				"prev_parent"
			],
			[
				"new",
				"new_node"
			],
			[
				"old",
				"old_relation"
			],
			[
				"first",
				"first"
			],
			[
				"child",
				"child"
			],
			[
				"findEl",
				"findElChildren"
			],
			[
				"node",
				"node"
			],
			[
				"parent",
				"parent_node"
			],
			[
				"find",
				"findElParent"
			],
			[
				"curr",
				"curr_el"
			],
			[
				"line",
				"line_number"
			],
			[
				"Node",
				"Node"
			],
			[
				"text",
				"text"
			],
			[
				"parentNode",
				"parentNode"
			],
			[
				"currLine",
				"currLine"
			],
			[
				"id",
				"id"
			],
			[
				"note",
				"note"
			],
			[
				"all",
				"all	all? { |e| .. }"
			],
			[
				"i",
				"i"
			],
			[
				"data",
				"data"
			],
			[
				"caretPos",
				"caretPos"
			],
			[
				"just",
				"just_changed"
			],
			[
				"code",
				"code"
			],
			[
				"test",
				"test_box"
			],
			[
				"onkep",
				"onkeypress"
			],
			[
				"e",
				"edge"
			],
			[
				"yo",
				"You"
			],
			[
				"get",
				"getElementById"
			],
			[
				"icon",
				"iconContainer"
			],
			[
				"measure",
				"measureText"
			],
			[
				"title",
				"title_lines"
			],
			[
				"vert_offset",
				"prev_vert_offset"
			],
			[
				"height",
				"height"
			],
			[
				"px",
				"pxValue"
			],
			[
				"defined",
				"defined_height"
			],
			[
				"fun",
				"functions"
			],
			[
				"border",
				"border-width"
			],
			[
				"top",
				"top_node"
			],
			[
				"combine",
				"combined_notes"
			],
			[
				"force",
				"forceRecalc"
			],
			[
				"proto",
				"prototype"
			],
			[
				"getCached",
				"getCachedZSortedEles"
			],
			[
				"prot",
				"prototype"
			],
			[
				"Canvas",
				"CanvasRenderer"
			],
			[
				"targ",
				"targ"
			],
			[
				"src",
				"src"
			],
			[
				"cont",
				"cont"
			],
			[
				"ctx",
				"ctx"
			],
			[
				"cy",
				"cy"
			],
			[
				"edge",
				"edge"
			],
			[
				"tap",
				"tap"
			],
			[
				"nodes",
				"nodes"
			],
			[
				"length",
				"length"
			],
			[
				"vert",
				"vert_offset"
			],
			[
				"color",
				"color"
			],
			[
				"table",
				"table-cell"
			],
			[
				"a",
				"a"
			],
			[
				"margin",
				"margin-right"
			],
			[
				"vertical",
				"vertical-long"
			],
			[
				"verto",
				"vertical-short"
			],
			[
				"event",
				"eventCol"
			],
			[
				"max",
				"max-width"
			],
			[
				"back",
				"background-image"
			],
			[
				"tim",
				"timelineVertical"
			],
			[
				"teamGrid",
				"teamGridIcon"
			],
			[
				"min",
				"min-height"
			],
			[
				"word",
				"word-wrap"
			],
			[
				"sc",
				"secondary"
			],
			[
				"Re",
				"Redd"
			],
			[
				"img",
				"imgWrapper"
			],
			[
				"backgroun",
				"background-color"
			],
			[
				"time",
				"timelineEvent"
			],
			[
				"timelin",
				"timelineEventMixin"
			],
			[
				"timelineE",
				"timelineEvent"
			],
			[
				"font",
				"font-size"
			],
			[
				"type",
				"type"
			],
			[
				"section",
				"sections"
			],
			[
				"tff-black",
				"tff-black"
			],
			[
				"secti",
				"sectionBlack"
			],
			[
				"text-",
				"text-align"
			],
			[
				"font-",
				"font-color"
			],
			[
				"resp",
				"respond_to"
			],
			[
				"inline",
				"inline-block"
			],
			[
				"our",
				"ourRed"
			],
			[
				"Id",
				"id"
			],
			[
				"upd",
				"updatenotes"
			],
			[
				"category",
				"category_id"
			],
			[
				"const",
				"const_type"
			],
			[
				"firs",
				"firstChar"
			],
			[
				"work",
				"work_groups"
			],
			[
				"clas",
				"class_name"
			],
			[
				"nav",
				"navHeight"
			],
			[
				"sec",
				"sectionTitle"
			],
			[
				"background",
				"background-color"
			],
			[
				"marg",
				"margin-right"
			],
			[
				"margin-",
				"margin-left"
			],
			[
				"na",
				"navHeight"
			],
			[
				"more",
				"more_than_just_data_height"
			],
			[
				"mo",
				"more_than_just_data_height"
			],
			[
				"lesser",
				"lesser_element"
			],
			[
				"greater",
				"greater_element"
			],
			[
				"footer",
				"footer_height"
			],
			[
				"backgrou",
				"background-color"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "// Place all the behaviors and hooks related to the matching controller here.\n// All this logic will automatically be available in application.js.\n// You can use CoffeeScript in this file: http://coffeescript.org/\nvar i = 0;\nvar lineText = \"\";\nvar prevLine = 0;\n\n$( document ).ready(function() {\n    var ele = gon.elements;\n    ele = JSON.stringify(ele);\n    $( \".test\" ).text(ele);\n\n    var lel = gon.elements;\n    $( \".test\" ).text(JSON.stringify(lel));\n});\n\n\n//gets the caret pos this is for text areas\n(function ($, undefined) {\n    $.fn.getCursorPosition = function() {\n        var el = $(this).get(0);\n        var pos = 0;\n        if('selectionStart' in el) {\n            pos = el.selectionStart;\n        } else if('selection' in document) {\n            el.focus();\n            var Sel = document.selection.createRange();\n            var SelLength = document.selection.createRange().text.length;\n            Sel.moveStart('character', -el.value.length);\n            pos = Sel.text.length - SelLength;\n        }\n        return pos;\n    };\n  })(jQuery);\n\n\n//ajax call that takes in a line number and its text, and sends them to the modelements function in the works controller\nfunction updateElements(changed_line, text){\n  $.ajax({\n    type:\"GET\",\n    url:\"modelements\",\n    data: {line_number: changed_line, line_content: text},\n    dataType:\"json\",\n    success: function(data){\n      ajSuccess(data);\n    }\n  });\n}\n\n//function that runs if the ajax is successful, will eventually update the graph\nfunction ajSuccess(data){\n  $(\"#test_box\").text(JSON.stringify(data));\n  i++;\n}\n\n//returns the text at the given line, by breaking it into an array of strings (one each line) returning last\nfunction getLineText(lineNum){\n  var lines = $(\"#work_markup\").val().split('\\n');\n//  console.log(\"888\" + lines[lineNum]);\n  return lines[lineNum];\n\n}\n\n//figure out what you want this to do\nfunction updateIfLineChanged(currLine){\n  if (currLine != prevLine){\n    var text = getLineText(prevLine);\n    updateElements(prevLine, text);\n    prevLine = currLine;\n    return true;\n  }\n  return false;\n}\n\n//using the text and the caret position, gets the line number\nfunction getCurrentLine(el){\n  //var caretPos = getCaretCharacterOffsetWithin(el);\n  var caretPos = $(\"#work_markup\").getCursorPosition();\n  if (caretPos == null)\n    return -1;\n  console.log(caretPos);\n\n  var currLine = 0;\n  var text = el.value;\n\n  for (var i = 0; i < caretPos; i++){\n    if (text[i] == \"\\n\"){\n      currLine++;\n    }\n  }\n  //if it's a newline...\n  console.log(\"$$$\" + currLine);\n  return currLine;\n\n}\n\n//function called on keyup. Should fix it. Mostly just determine between deletes and insertions.\nfunction upFunction(e){\n  var code = e.code || e.which;\n  \n  //I believe these two are equivalent\n  //var el = $(\"#editable\")[0];\n  var el = this;\n  var currLine = 0;\n\n  //delete never changes the LINE\n  //if the key pressed wasn't an arrow or a del/backsp.\n  if ((code==8) || (code==46) || ((code >= 37) && (code <= 40))){\n    currLine = getCurrentLine(el);\n    updateIfLineChanged(currLine);\n  }\n  else if (code == 13){\n    \n  }\n\n  else{\n    currLine = getCurrentLine(el);\n    updateIfLineChanged(currLine);\n  }\n\n  return;\n}\n\n//function called on click. Gets the current line and sends it to checkChanged\nfunction clickFunction(e){\n  var currLine = getCurrentLine(this);\n  updateIfLineChanged(currLine);\n}\n\n$( document ).ready(function() {\n//  $ ('#work_markup').get(0).onkeypress= pressFunction;\n  $ ('#work_markup').get(0).onkeyup= upFunction;\n  $ ('#work_markup').get(0).onclick= clickFunction;\n\n  // $ ('#editable').get(0).onkeypress= EDpressFunction;\n  // $ ('#editable').get(0).onkeyup= EDupFunction;\n  // $ ('#editable').get(0).onclick= EDclickFunction;\n});\n\n\n$(loadCy = function(){\n  options = {\n    layout: {\n      name: 'arbor',\n      liveUpdate: true, // whether to show the layout as it's running\n      ready: undefined, // callback on layoutready \n      stop: undefined, // callback on layoutstop\n      maxSimulationTime: 4000, // max length in ms to run the layout\n      fit: true, // reset viewport to fit defaualt simulationBounds\n      padding: [ 50, 50, 50, 50 ], // top, right, bottom, left\n      simulationBounds: undefined, // [x1, y1, x2, y2]; [0, 0, width, height] by defaualt\n      ungrabifyWhileSimulating: true, // so you can't drag nodes during layout\n\n      // forces used by arbor (use arbor defaualt on undefined)\n      repulsion: undefined,\n      stiffness: undefined,\n      friction: undefined,\n      gravity: true,\n      fps: undefined,\n      precision: undefined,\n\n      // static numbers or functions that dynamically return what these\n      // values should be for each element\n      nodeMass: undefined,\n      edgeLength: undefined,\n\n      stepSize: 1, // size of timestep in simulation\n\n      // function that returns true if the system is stable to indicate\n      // that the layout can be stopped\n      stableEnergy: function( energy ){\n          var e = energy;\n          return (e.max <= 0.5) || (e.mean <= 0.3);\n      }\n    },\n\n    showOverlay: false,\n    panningEnabled: true,\n    boxSelectionEnabled: false,\n    minZoom: 0.5,\n    maxZoom: 2,\n\n    style: cytoscape.stylesheet()\n      .selector('node')\n        .css({\n          'content': 'data(title)',\n          'font-family': 'helvetica',\n          'font-size': 14,\n          \n          'width': 'mapData(weight, 30, 80, 20, 50)',\n          'height': 'mapData(height, 0, 200, 10, 45)',\n          'z-index' : 1\n        })\n    \n      .selector(':selected')\n        .css({\n          'background-color': '#000',\n          'line-color': '#000',\n          'target-arrow-color': '#000',\n          'text-outline-color': '#000'\n        })\n      .selector('edge')\n        .css({\n          'width': 3,\n          'target-arrow-shape': 'none'\n        })\n      .selector('.starting')\n        .css({\n          'text-outline-width': 3,\n          'text-outline-color': 'data(color)',\n          'border-color':'data(color)',\n          'border-width':3,\n          'background-color': '#fff',\n          'text-valign': 'center',\n          'text-halign' : 'center',\n          'color': '#fff',\n          'font-size':\"16px\",\n          'height':\"30px\",\n         \n          //this needs to be there, otherwise it doesn't draw the notes correctly the first time.\n          'note-font-size': \"16px\",\n          'note-font-weight': \"bold\",\n          'note-text-outline-width': 0,\n          \n        })\n      .selector('.focused')\n       .css({\n          'width' : '300px',\n          'height' : 'auto',\n          'shape' : 'roundrectangle',\n          'border-width' : \"3px\",\n          'border-color' : \"data(color)\",\n          'background-color' : '#fff',\n          'background-opacity' : 1,\n          \"opacity\" : 1,\n          \"z-index\" : 5,\n\n          'content' : 'data(title)',\n          'text-outline-width': 3,\n          'text-outline-color': 'data(color)',\n          'color': '#fff',\n          'text-valign' : \"top\",\n          'font-size':\"18px\",\n\n          'notes': 'data(notes)',\n          'note-text-outline-width': 0,\n          'note-text-outline-color':\"#fff\",\n          'note-color': '#444',\n          'note-font-size': \"16px\",\n          'note-font-weight': \"bold\",\n        })\n      .selector('.less-focused')\n        .css({\n          'z-index' : 3,\n          'background-color':\"#dddddd\"\n        })\n\n      .selector('.faded')\n        .css({\n          'opacity': 0.9,\n          'text-opacity': 0.9,\n          'z-index': 1,\n       }),\n\n\n\n    \n    elements:gon.elements,\n\n    ready: function(){\n      window.cy = this;\n      cy.elements().unselectify();\n\n      //centers the node further from the middle when clicking edge\n      cy.on('tap', 'edge', function(e){\n        var edge = e.cyTarget;\n        var src = edge.source();\n        var targ = edge.target();\n\n        //center of canvas\n        var cont = $('#cy')[0];\n        //var cont = document.getElementById(cy);\n        var cent_x = (cont.offsetWidth)/2;\n        var cent_y = (cont.offsetHeight)/2;\n     \n        //x and y of the two nodes\n        var src_x = src.renderedPosition(\"x\");\n        var src_y = src.renderedPosition(\"y\");\n        var targ_x = targ.renderedPosition(\"x\");\n        var targ_y = targ.renderedPosition(\"y\");\n       \n        //distance function, sans sqrt\n        var src_dist = (cent_x - src_x) * (cent_x - src_x) + (cent_y - src_y) * (cent_y - src_y);\n        var targ_dist = (cent_x - targ_x) * (cent_x - targ_x) + (cent_y - targ_y) * (cent_y - targ_y);\n\n        //whichever node is further away, center it\n        if (src_dist >= targ_dist){\n          cy.center(src);\n        } else {\n          cy.center(targ);\n        }\n\n      });\n      \n      //bring focus to the element as they're clicked, prioritizing the most recent click\n      cy.on('tap', 'node', function(e){\n        var curr_node = e.cyTarget; \n        var prev_foci = cy.elements('node.focused');\n\n        prev_foci.not(curr_node).addClass('less-focused'); //middleground all focused nodes except current\n\n        if (curr_node.hasClass('less-focused')){ //if it's been middlegrounded, foreground\n          curr_node.removeClass('less-focused');\n        } \n        else { //otherwise, swap between foreground and background\n          curr_node.toggleClass('focused');\n        }\n      });\n\n      //resets the nodes when background is clicked\n      cy.on('tap', function(e){\n        if( e.cyTarget === cy ){\n          cy.elements().removeClass('focused');\n          cy.elements().removeClass('less-focused');\n        }\n      });\n\n      cy.on('load', function(e) {\n        cy.elements().addClass(\"starting\");\n      });\n\n    }\n  };\n  $('#cy').cytoscape(options);\n});\n\n\nfunction EDgetLineText(currLine){\n  var text = $('#editable').get(0).innerText;\n  console.log(\"888\" + currLine);\n  if (currLine != 0){\n    var lines = $(\"#editable > *\");\n    if (lines[currLine-1] != null)\n      return lines[currLine-1].innerText;\n    else //if the line number is not a real one\n      return \"\";\n  }\n\n  else{ //if it's line 0, there is no jquery object\n    //returns as soon as there's a newline. if it never hits one, just returns the entire thing\n    var i;\n    for (i = 0; i < text.length; i++){\n      if (text[i] == \"\\n\")\n        return text.substring(0, i);\n    }\n    return text;\n  }\n}\n\nfunction EDgetCurrentLine(el, caretPos){\n  //var caretPos = getCaretCharacterOffsetWithin(el);\n  if (caretPos == null){\n    alert(\"wat\");\n    return 0;\n  }\n  var currLine = 0;\n\n  var text = el.innerText;\n  var text_html = el.innerHTML;\n  var i;\n\n  for (i = 0; i <= caretPos; i++){\n    if (text[i] == \"\\n\"){\n      currLine++;\n      caretPos++;\n    }\n    else{\n    }\n  }\n\n  //for text input, fixes the issue with the extra newline at the end\n  if (currLine >= 0 && text[caretPos-1] == \"\\n\"){\n    currLine--;\n  }\n  //solves issue with end of line moving cursor via arrows\n  if (text[caretPos] == \"\\n\"){\n    currLine--;\n  }\n  //if it's a newline...\n  return currLine;\n\n}\n\n\nfunction EDpressFunction(e){\n  var code = e.keyCode || e.which;\n\n  var el = $(\"#editable\")[0];\n  var caretPos = getCaretCharacterOffsetWithin(el);\n\n  var currLine = getCurrentLine(el, caretPos);\n  \n  if (code == 13){\n    currLine++;\n  }\n\n  checkChangedLine(currLine);\n  //so, whenever I make changes to a line that's not a backspace, send its complete self to the parser, to do its best with\n    //on the parser side, I don't want to just endlessly create shit... don't change to new element unless ordered to?\n  //keep track of previous line number, so if backspace is hit, I can know whether or not a whole line is gone. \n}\n\nfunction EDupFunction(e){\n  code = e.code || e.which;\n  \n  //I believe these two are equivalent\n  //var el = $(\"#editable\")[0];\n  var el = this;\n  var caretPos = getCaretCharacterOffsetWithin(el);\n  var currLine = 0;\n\n  var sel = rangy.getSelection();\n  var cursorOffset = sel.focusOffset;\n  \n  //delete never changes the LINE\n  //if the key pressed wasn't an arrow or a del/backsp.\n  if ((code==8) || (code==46) || ((code >= 37) && (code <= 40))){\n    currLine = getCurrentLine(el, caretPos);\n\n    //if the line by line count is 0, it's the border case, just bump it up, don't count if at first line\n    if (cursorOffset == 0 && caretPos != 0){\n     currLine++;\n    }\n    checkChangedLine(currLine);\n  }\n  //else if (code == 13){\n  //  currLine = getCurrentLine(el, caretPos);\n  //  currLine++; //since it's an enter\n  //  checkChangedLine(currLine);\n  //}\n\n  return;\n}\n\nfunction EDclickFunction(e){\n  var caretPos = getCaretCharacterOffsetWithin(this);\n  var currLine = getCurrentLine(this, caretPos);\n\n  var sel = rangy.getSelection();\n  var cursorOffset = sel.focusOffset;\n\n  //if the line by line count is 0, it's the border case, just bump it up, don't count if at first line\n  if (cursorOffset == 0 && caretPos != 0){\n   currLine++;\n  }\n  checkChangedLine(currLine);\n}\n\n\n//GETTING THE CARET POSITION\nfunction getCaretCharacterOffsetWithin(element) {\n    var caretOffset = 0;\n    var doc = element.ownerDocument || element.document;\n    var win = doc.defaultView || doc.parentWindow;\n    var sel;\n    if (typeof win.getSelection != \"undefined\") {\n        var range = win.getSelection().getRangeAt(0);\n        var preCaretRange = range.cloneRange();\n        preCaretRange.selectNodeContents(element);\n        preCaretRange.setEnd(range.endContainer, range.endOffset);\n        caretOffset = preCaretRange.toString().length;\n    } else if ( (sel = doc.selection) && sel.type != \"Control\") {\n        var textRange = sel.createRange();\n        var preCaretTextRange = doc.body.createTextRange();\n        preCaretTextRange.moveToElementText(element);\n        preCaretTextRange.setEndPoint(\"EndToEnd\", textRange);\n        caretOffset = preCaretTextRange.text.length;\n    }\n    return caretOffset;\n}\n\n//$(#editable).keypress(function(){\n // alert(\"shoo\");\n//});\n\n//THIS IS THE FORMATTING I USED IN THE VIEW\n/* \n$('#cy').cytoscape({\n  layout: {\n    name: 'arbor',\n    liveUpdate: false, // whether to show the layout as it's running\n    ready: undefined, // callback on layoutready \n    stop: undefined, // callback on layoutstop\n    maxSimulationTime: 4000, // max length in ms to run the layout\n    fit: true, // reset viewport to fit defaualt simulationBounds\n    padding: [ 50, 50, 50, 50 ], // top, right, bottom, left\n    simulationBounds: undefined, // [x1, y1, x2, y2]; [0, 0, width, height] by defaualt\n    ungrabifyWhileSimulating: true, // so you can't drag nodes during layout\n\n    // forces used by arbor (use arbor defaualt on undefined)\n    repulsion: undefined,\n    stiffness: undefined,\n    friction: undefined,\n    gravity: true,\n    fps: undefined,\n    precision: undefined,\n\n    // static numbers or functions that dynamically return what these\n    // values should be for each element\n    nodeMass: undefined,\n    edgeLength: undefined,\n\n    stepSize: 1, // size of timestep in simulation\n\n    // function that returns true if the system is stable to indicate\n    // that the layout can be stopped\n    stableEnergy: function( energy ){\n        var e = energy;\n        return (e.max <= 0.5) || (e.mean <= 0.3);\n    }\n  },\n\n  style: cytoscape.stylesheet()\n    .selector('node')\n      .css({\n        'content': 'data(title)',\n        'text-valign': 'center',\n        'color': 'white',\n        'text-outline-width': 2,\n        'text-outline-color': '//888'\n      })\n    .selector('edge')\n      .css({\n        'target-arrow-shape': 'triangle'\n      })\n    .selector(':selected')\n      .css({\n        'background-color': 'black',\n        'line-color': 'black',\n        'target-arrow-color': 'black',\n        'source-arrow-color': 'black'\n\n      })\n\n    .selector('.faded')\n      .css({\n        'opacity': 0.25,\n        'text-opacity': 0\n      })\n\n    .selector('.largeNode')\n      .css({\n        'width' : '100px',\n        'height' : '100px'\n      }),\n\n  elements: {\n    nodes: [\n      { data: { id: 'j', title: 'Jerry' } },\n      { data: { id: 'e', title: 'Elaine' } },\n      { data: { id: 'k', title: 'Kramer' } },\n      { data: { id: 'g', title: 'George' } }\n    ],\n    edges: [\n      { data: { source: 'j', target: 'e' } },\n      { data: { source: 'j', target: 'k' } },\n      { data: { source: 'j', target: 'g' } },\n      { data: { source: 'e', target: 'j' } },\n      { data: { source: 'e', target: 'k' } },\n      { data: { source: 'k', target: 'j' } },\n      { data: { source: 'k', target: 'e' } },\n      { data: { source: 'k', target: 'g' } },\n      { data: { source: 'g', target: 'j' } }\n    ]\n  },\n  \n    ready: function(){\n      window.cy = this;\n      \n      cy.elements().unselectify();\n      \n      cy.on('tap', 'node', function(e){\n        var node = e.cyTarget;\n        var neighborhood = node.neighborhood().add(node);\n        \n        cy.nodes().addClass('faded');\n        cy.nodes().removeClass('faded');\n        node.toggleClass('largeNode');\n      });\n      \n      cy.on('tap', function(e){\n        if( e.cyTarget === cy ){\n          cy.nodes().removeClass('faded');\n          cy.nodes().removeClass('largeNode');\n        }\n      });\n\n  }\n\n}); */",
			"file": "app/assets/javascripts/works.js",
			"file_size": 17011,
			"file_write_time": 1393516595000000,
			"settings":
			{
				"buffer_size": 17045,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/models/work.rb",
			"settings":
			{
				"buffer_size": 10254,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/controllers/works_controller.rb",
			"settings":
			{
				"buffer_size": 2763,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/views/works/_terminal.html.erb",
			"settings":
			{
				"buffer_size": 638,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/assets/stylesheets/works.css.scss",
			"settings":
			{
				"buffer_size": 508,
				"line_ending": "Unix"
			}
		},
		{
			"file": "config/routes.rb",
			"settings":
			{
				"buffer_size": 1910,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/models/note.rb",
			"settings":
			{
				"buffer_size": 75,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/models/node.rb",
			"settings":
			{
				"buffer_size": 1408,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Gemfile",
			"settings":
			{
				"buffer_size": 1397,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"",
				"About"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: instal",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"instl",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"package control",
				"Package Control: Remove Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			]
		],
		"width": 530.0
	},
	"console":
	{
		"height": 139.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/liam/projs/noteworks/config/environment.rb",
		"/home/liam/projs/noteworks/Gemfile",
		"/home/liam/projs/noteworks/db/migrate/20140227164353_add_depth_to_notes.rb",
		"/home/liam/projs/noteworks/app/views/works/modelelements.html.erb",
		"/home/liam/projs/noteworks/app/models/key_node.rb",
		"/home/liam/projs/noteworks/app/models/key.rb",
		"/home/liam/projs/noteworks/app/models/work.rb",
		"/home/liam/projs/noteworks/app/assets/javascripts/application.js",
		"/home/liam/projs/noteworks/app/assets/javascripts/force_directed.js",
		"/home/liam/projs/noteworks/app/views/layouts/application.html.erb",
		"/home/liam/projs/noteworks/testcaret.html",
		"/home/liam/projs/tff/tffproto/resources/sass/components/_tffCarousel.scss",
		"/home/liam/projs/tff/tffproto/resources/sass/components/_stickynav.scss",
		"/home/liam/projs/tff/tffproto/resources/sass/components/singlePageSections/_about.scss",
		"/home/liam/projs/tff/tffproto/views/components/sections/about.jade",
		"/home/liam/projs/tff/tffproto/resources/sass/utils/todo.txt",
		"/home/liam/projs/noteworks/todolist.txt",
		"/home/liam/.config/sublime-text-2/Packages/Default/Default (Linux).sublime-keymap",
		"/home/liam/projs/noteworks/app/models/category.rb",
		"/home/liam/projs/noteworks/word-wrap-test.html",
		"/home/liam/projs/noteworks/vendor/assets/javascripts/cytoscape.js-2.0.4/cytoscape.js",
		"/home/liam/projs/noteworks/vendor/assets/javascripts/cytoscape.js-2.0.4/cytoscape-2-1.js",
		"/home/liam/projs/noteworks/db/migrate/20140119183909_add_empty_string_to_combined_notes.rb",
		"/home/liam/projs/noteworks/app/views/works/index.json.jbuilder",
		"/home/liam/projs/noteworks/app/views/works/takenotes.html.erb",
		"/home/liam/projs/noteworks/app/assets/stylesheets/application.css",
		"/home/liam/projs/noteworks/app/views/works/show.json.jbuilder",
		"/home/liam/projs/noteworks/app/views/links/show.json.rabl",
		"/home/liam/projs/noteworks/app/views/works/index.json.rabl",
		"/home/liam/projs/noteworks/app/assets/javascripts/works.js",
		"/home/liam/projs/noteworks/app/views/nodes/index.json.rabl",
		"/home/liam/projs/noteworks/app/assets/stylesheets/works.css.scss",
		"/home/liam/projs/noteworks/app/models/node.rb",
		"/home/liam/projs/noteworks/app/views/works/_terminal.html.erb",
		"/home/liam/projs/noteworks/app/assets/javascripts/works.js.coffee",
		"/home/liam/projs/noteworks/app/views/nodes/show.json.jbuilder",
		"/home/liam/projs/noteworks/app/views/nodes/show.json.rabl",
		"/home/liam/projs/noteworks/app/views/works/testnetwork.json.erb",
		"/home/liam/projs/tff/tffproto/resources/js/stickynav.js",
		"/home/liam/projs/tff/tffproto/resources/sass/modules/_sections.scss",
		"/home/liam/projs/tff/tffproto/resources/sass/utils/_colors.scss",
		"/home/liam/projs/tff/tffproto/resources/sass/components/singlePageSections/_team.scss",
		"/home/liam/projs/tff/tffproto/pages/singlePage.jade",
		"/home/liam/projs/tff/tffproto/views/components/sections/winners.jade",
		"/home/liam/projs/tff/tffproto/resources/sass/components/singlePageSections/_winners.scss",
		"/home/liam/projs/tff/tffproto/resources/sass/components/singlePageSections/_contact.scss",
		"/home/liam/projs/tff/tffproto/resources/sass/components/singlePageSections/_event.scss",
		"/home/liam/projs/tff/tffproto/resources/sass/screen.scss",
		"/home/liam/projs/tff/tffproto/resources/js/singlepage.js",
		"/home/liam/projs/tff/tffproto/views/components/sections/team.jade",
		"/home/liam/projs/tff/tffproto/resources/sass/components/_indSections.scss",
		"/home/liam/projs/tff/tffproto/resources/sass/components/singlePageSections/_submit.scss",
		"/home/liam/projs/tff/tffproto/views/components/sections/submit.jade",
		"/home/liam/projs/tff/tffproto/views/shared/head.jade",
		"/home/liam/projs/tff/tffproto/views/shared/foot.jade",
		"/home/liam/projs/tff/tffproto/views/components/sections/events.jade",
		"/home/liam/projs/tff/tffproto/views/components/sections/contact.jade",
		"/home/liam/projs/tff/tffproto/resources/sass/components/singlePageSections/_submit.scs",
		"/home/liam/projs/tff/tffproto/resources/sass/components/singlePageSections/_events.scss",
		"/home/liam/projs/tff/tffproto/resources/sass/utils/_mixins.scss",
		"/home/liam/projs/tff/tffproto/singlePage.html",
		"/home/liam/projs/tff/tffproto/pages/sticknavpage.jade",
		"/home/liam/projs/tff/tffproto/views/components/stickynav.jade",
		"/home/liam/projs/tff/tffproto/views/components/content.jade",
		"/home/liam/projs/tff/tffproto/resources/sass/modules/_layout.scss",
		"/home/liam/projs/tff/tffproto/resources/sass/utils/_reset.scss",
		"/home/liam/projs/tff/tffproto/resources/sass/utils/_breakpoint.scss",
		"/home/liam/projs/tff/tffproto/resources/sass/utils/_var.scss",
		"/home/liam/projs/tff/tffproto/resources/sass/utils/_zIndex.scss",
		"/home/liam/projs/tff/tffproto/views/components/winnersSection.jade",
		"/home/liam/projs/tff/tffproto/views/components/teamSection.jade",
		"/home/liam/projs/tff/tffproto/views/components/submissionsSection.jade",
		"/home/liam/projs/tff/tffproto/views/components/events.jade",
		"/home/liam/projs/tff/tffproto/views/components/contactSection.jade",
		"/home/liam/projs/tff/tffproto/views/components/aboutSection.jade",
		"/home/liam/projs/tff/tffproto/.smonignore",
		"/home/liam/projs/tff/tffproto/views/components/sectionsFiller.jade",
		"/home/liam/projs/tff/tffproto/resources/images/Business-Graduation-cap-icon.png",
		"/home/liam/projs/tff/tffproto/resources/images/icons/Business-Graduation-cap-icon.png",
		"/home/liam/projs/noteworks/app/assets/javascripts/stackoverflow",
		"/home/liam/projs/noteworks/app/views/works/data.tsv",
		"/home/liam/projs/noteworks/db/migrate/20131128034016_rename_parent_child_to_links.rb",
		"/home/liam/projs/noteworks/db/migrate/20131128033631_rename_parent_children_to_links.rb",
		"/home/liam/projs/noteworks/app/models/parent_child.rb",
		"/home/liam/projs/noteweb/testJson/miserables.json",
		"/home/liam/projs/noteweb/miserables.json",
		"/home/liam/projs/noteweb/testNetwork.html",
		"/home/liam/projs/noteweb/testScript.json",
		"/home/liam/projs/tff/tffproto/resources/sass/components/_sections.scss",
		"/home/liam/projs/tff/tffproto/resources/sass/components/_submissionsSection.scss",
		"/home/liam/projs/noteweb/app/models/test_init.rb",
		"/home/liam/projs/noteweb/app/models/test_init",
		"/home/liam/projs/noteweb/app/views/works/edit.html.erb",
		"/home/liam/projs/noteweb/app/models/category.rb",
		"/home/liam/projs/noteweb/app/models/node.rb",
		"/home/liam/projs/noteweb/app/views/nodes/index.html.erb",
		"/home/liam/projs/noteweb/Gemfile",
		"/home/liam/projs/noteweb/app/models/work.rb",
		"/home/liam/projs/noteweb/app/views/nodes/show.html.erb",
		"/home/liam/projs/noteweb/app/views/works/nodedisplay.html.erb",
		"/home/liam/projs/noteweb/config/routes.rb",
		"/home/liam/projs/noteweb/app/controllers/nodes_controller.rb",
		"/home/liam/projs/noteweb/app/views/nodes/_form.html.erb",
		"/home/liam/projs/noteweb/app/models/parent_child.rb",
		"/home/liam/projs/noteweb/app/views/works/show.html.erb",
		"/home/liam/projs/noteweb/app/models/work_group.rb",
		"/home/liam/projs/noteweb/app/models/user.rb",
		"/home/liam/projs/noteweb/app/models/comparison_node.rb",
		"/home/liam/projs/noteweb/db/migrate/20131114224435_create_nodes.rb",
		"/home/liam/projs/noteweb/db/migrate/20131114224440_create_positions.rb",
		"/home/liam/projs/noteweb/app/controllers/work_controller.rb",
		"/home/liam/projs/noteweb/app/controllers/node_controller.rb",
		"/home/liam/projs/noteweb/app/models/nodes/comparison_node.rb",
		"/home/liam/projs/tff/tffproto/resources/images/FBbutotn.png",
		"/home/liam/projs/tff/tffproto/views/components/sections.jade",
		"/home/liam/projs/tff/tffproto/resources/sass/components/_submissionsSection",
		"/home/liam/projs/tff/tffproto/resources/sass/components/_submissionSection",
		"/home/liam/projs/tff/tffproto/resources/sass/modules/_chunk.scss",
		"/home/liam/projs/tff/tffproto/views/components/_chunk.scss",
		"/home/liam/projs/tff/tffproto/views/components/chunks.jade",
		"/home/liam/projs/tff/tffproto/views/components/submitChunk.jade",
		"/home/liam/projs/tffproto/resources/sass/components/_stickynav.scss",
		"/home/liam/projs/tffproto/resources/js/stickynav.js",
		"/home/liam/projs/tffproto/views/components/stickynav.jade",
		"/home/liam/projs/tffproto/pages/sticknavpage.jade",
		"/home/liam/projs/tffproto/pages/index.jade",
		"/home/liam/projs/tffproto/config.json",
		"/home/liam/projs/tffproto/resources/sass/modules/_layout.scss"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"@firstChar",
			"getLineTe",
			"console.log",
			"getCursor",
			"getCursorPo",
			"@stack",
			"caretPos",
			"console",
			"console.log",
			"getCurrent",
			"checkChanged",
			"updateEle",
			"alert",
			"#test",
			"test",
			"text",
			"console.log(\"in ",
			"drawNodeText",
			".\n",
			"getLines",
			"drawNodeText",
			" console.log",
			"drawNodeText",
			"getLines",
			"    \n",
			"console.log",
			"drawText",
			"drawNodeText",
			"drawNode",
			"lines.length",
			"lines",
			"lines.length()",
			"getLines",
			"drawNodeText",
			";\n",
			"drawNode",
			".pxValue",
			"\"height\"\n\"height\"",
			"\"height\"",
			"\"height\"\n\"height\"",
			"\"height\"",
			"element._private.style",
			"drawText",
			"getNodeHeight",
			"nodeHeight",
			"pxValue",
			"getNodeHeight",
			"nodeHeight",
			"drawNode",
			"pxValue",
			"drawNode",
			"getNodeHeight",
			"drawNode",
			"lines",
			"drawNode",
			"drawNodeText",
			"drawNode",
			"drawNodeText",
			"drawNode",
			"drawNodeText",
			"drawText",
			"getNodeHeight",
			"\"height\"",
			"getNodeHeight",
			"style[\"height",
			"lines",
			"text-opacity",
			"note-text-opacity",
			"text-opacity",
			"color",
			"note-color",
			"\"notes\"",
			"\"content\"",
			"\"notes\"",
			"lines",
			"\"notes",
			"\"notes\"",
			"\"notes",
			"note_text",
			"notes",
			"note_text",
			"font-size",
			"content",
			"getLines",
			"drag",
			"pan",
			"drag",
			"select",
			"container",
			"canvas",
			"x1",
			"center",
			"content",
			"text-outline-width",
			"node_title",
			"content",
			"element",
			"title",
			"context.strokeText",
			"gon",
			"#",
			"//",
			"default",
			"data",
			"margin",
			"padding",
			" ",
			"welcom",
			"#ffffff",
			"tff-grey",
			"#ffffff",
			"#000000",
			"tffRed",
			"tffWhite",
			"border",
			"border-style",
			"mainAward",
			"\n	",
			";\n",
			"%;\n",
			"value",
			"id",
			"ParentChild",
			"node_id",
			"node",
			"navColor",
			"({\"background-color\": \"#activeNavColor\"})",
			"({\"background-color\": \"#navColor\"})"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"firstChar",
			"stack",
			"#editable",
			"targ1",
			"targ",
			"//",
			"#",
			"defaualt",
			"datum",
			"$tff-white",
			"$tff-black",
			"tff-red",
			"tff-white",
			"primaryAward",
			"id",
			"value",
			"Link",
			"work",
			"passiveNavColor",
			"(activeNavColor)",
			"(navColor)",
			"activeNavColor",
			"navColor",
			"button",
			"#2C304D",
			"#1C206D",
			"#1C209D",
			"#1C202D",
			"#0D528A",
			"greater_headings",
			"."
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "app/assets/javascripts/works.js",
					"settings":
					{
						"buffer_size": 17045,
						"regions":
						{
						},
						"selection":
						[
							[
								3098,
								3098
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": true,
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1386.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "app/models/work.rb",
					"settings":
					{
						"buffer_size": 10254,
						"regions":
						{
						},
						"selection":
						[
							[
								3205,
								3205
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": true,
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1421.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "app/controllers/works_controller.rb",
					"settings":
					{
						"buffer_size": 2763,
						"regions":
						{
						},
						"selection":
						[
							[
								1762,
								1762
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": true,
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1716.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "app/views/works/_terminal.html.erb",
					"settings":
					{
						"buffer_size": 638,
						"regions":
						{
						},
						"selection":
						[
							[
								585,
								585
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": true,
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Rails/HTML (Rails).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "app/assets/stylesheets/works.css.scss",
					"settings":
					{
						"buffer_size": 508,
						"regions":
						{
						},
						"selection":
						[
							[
								494,
								494
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": true,
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Sass/Syntaxes/Sass.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "config/routes.rb",
					"settings":
					{
						"buffer_size": 1910,
						"regions":
						{
						},
						"selection":
						[
							[
								195,
								195
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": true,
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "app/models/note.rb",
					"settings":
					{
						"buffer_size": 75,
						"regions":
						{
						},
						"selection":
						[
							[
								24,
								24
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": true,
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Ruby/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "app/models/node.rb",
					"settings":
					{
						"buffer_size": 1408,
						"regions":
						{
						},
						"selection":
						[
							[
								131,
								131
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": true,
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "Gemfile",
					"settings":
					{
						"buffer_size": 1397,
						"regions":
						{
						},
						"selection":
						[
							[
								1396,
								1396
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": true,
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Ruby/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 924.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 38.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 124.0
	},
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 180.0,
	"status_bar_visible": true
}
